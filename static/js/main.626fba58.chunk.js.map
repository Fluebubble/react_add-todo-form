{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","helpers/helpers.ts","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","generateTodoId","Math","max","getUserById","users","find","todosWithUsers","userId","usersFromServer","App","useState","setTodos","todoTitle","setTodoTitle","selectedUserId","setSelectedUserId","select","isErrorShown","setisErrorShown","action","method","onSubmit","event","preventDefault","trim","newTodo","prevTodos","prevState","type","value","onChange","titleValue","target","onBlur","placeholder","e","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.626fba58.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../Interfaces/Interfaces';\n\ninterface Props {\n  user: User | null,\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { TodoWithUser } from '../../Interfaces/Interfaces';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: TodoWithUser;\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n      key={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoWithUser } from '../../Interfaces/Interfaces';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: TodoWithUser[]\n}\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import { Todo, User } from '../Interfaces/Interfaces';\n\nexport const generateTodoId = (todos: Todo[]) => {\n  const highestId = Math.max(...todos.map(todo => todo.id));\n\n  return highestId + 1;\n};\n\nexport const getUserById = (users: User[], id: number | null) => {\n  return users.find(user => user.id === id) || null;\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { generateTodoId, getUserById } from './helpers/helpers';\n\nconst todosWithUsers = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(usersFromServer, todo.id),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [users] = useState(usersFromServer);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\n  const [isErrorShown, setisErrorShown] = useState({\n    select: false,\n    title: false,\n  });\n\n  const onTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const titleValue = event.target.value;\n\n    setTodoTitle(titleValue);\n    setisErrorShown(prevState => ({\n      ...prevState,\n      title: false,\n    }));\n  };\n\n  const onTitleBlur = () => {\n    if (!todoTitle.trim()) {\n      setisErrorShown(prevState => ({\n        ...prevState,\n        title: true,\n      }));\n    }\n  };\n\n  const onUserSelect = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setSelectedUserId(+event.target.value);\n    setisErrorShown(prevState => ({\n      ...prevState,\n      select: false,\n    }));\n  };\n\n  const onBlurUserSelect = () => {\n    if (selectedUserId === null) {\n      setisErrorShown(prevState => ({ ...prevState, select: true }));\n\n      return;\n    }\n\n    setisErrorShown(prevState => ({ ...prevState, select: false }));\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!selectedUserId && !todoTitle.trim()) {\n      setisErrorShown({\n        select: true,\n        title: true,\n      });\n\n      return;\n    }\n\n    if (!selectedUserId) {\n      setisErrorShown(prevState => ({\n        ...prevState,\n        select: true,\n      }));\n\n      return;\n    }\n\n    if (!todoTitle.trim()) {\n      setisErrorShown(prevState => ({\n        ...prevState,\n        title: true,\n      }));\n\n      return;\n    }\n\n    const newTodo = {\n      id: generateTodoId(todos),\n      title: todoTitle.trim(),\n      completed: false,\n      userId: selectedUserId,\n      user: getUserById(users, selectedUserId),\n    };\n\n    setTodos(prevTodos => [\n      ...prevTodos,\n      newTodo,\n    ]);\n\n    setTodoTitle('');\n    setSelectedUserId(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={todoTitle}\n              onChange={onTitleChange}\n              onBlur={onTitleBlur}\n              placeholder=\"Write the title\"\n            />\n          </label>\n          {\n            isErrorShown.title\n            && <span className=\"error\">Please enter a title</span>\n          }\n\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              onChange={e => onUserSelect(e)}\n              value={selectedUserId ?? '0'}\n              onBlur={onBlurUserSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {users.map(user => (\n                <option value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {isErrorShown.select && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n  // {\n  //   id: 8,\n  //   title: 'extrawaganza',\n  //   completed: true,\n  //   userId: 4,\n  // },\n  // {\n  //   id: 11,\n  //   title: 'Headshotnul babool`koo',\n  //   completed: true,\n  //   userId: 6,\n  // },\n  // {\n  //   id: 18,\n  //   title: 'loremIpsumDolorSitAmet',\n  //   completed: true,\n  //   userId: 122,\n  // },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}